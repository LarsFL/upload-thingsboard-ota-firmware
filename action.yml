# action.yml
name: "Publish OTA to ThingsBoard"
author: "LarsFL"
description: "GitHub action to publish OTA packages to ThingsBoard"

branding:
  icon: "upload-cloud"
  color: "blue"

inputs:
  title:
    description: "OTA Title"
    required: true
  version:
    description: "OTA Version"
    required: true
  file:
    description: "File to upload"
    required: true
  tb_url:
    description: "ThingsBoard URL"
    required: true
  device_profile_id:
    description: "Device Profile ID"
    required: true
  tb_username:
    description: "ThingsBoard Username"
    required: true
  tb_password:
    description: "ThingsBoard Password"
    required: true

runs:
  using: "composite"
  steps:
    - name: Authenticate with ThingsBoard
      id: auth
      shell: bash
      run: |
        LOGIN_RESPONSE=$(curl -s -X POST ${{inputs.tb_url}}/api/auth/login \
          -H "Content-Type: application/json" \
          -d "{\"username\": \"${{ inputs.tb_username }}\", \"password\": \"${{ inputs.tb_password }}\"}")
        TOKEN=$(echo "$LOGIN_RESPONSE" | jq -r .token)
        echo "::add-mask::$TOKEN"
        echo "token=$TOKEN" >> "$GITHUB_OUTPUT"

    - name: Create OTA Package Metadata
      id: create_ota
      shell: bash
      run: |
        CREATE_RESPONSE=$(curl -s -w "%{http_code}" -o create_response.json \
          -X POST ${{inputs.tb_url}}/api/otaPackage \
          -H "Content-Type: application/json" \
          -H "X-Authorization: Bearer ${{ steps.auth.outputs.token }}" \
          -d '{
            "deviceProfileId": {
              "id": "${{ inputs.device_profile_id }}",
              "entityType": "DEVICE_PROFILE"
            },
            "type": "FIRMWARE",
            "title": "${{ inputs.title }}",
            "version": "${{ inputs.version }}"
          }')

        if [ "$CREATE_RESPONSE" != "200" ]; then
          echo "Failed to create OTA package. HTTP $CREATE_RESPONSE"
          cat create_response.json
          exit 1
        fi

        OTA_ID=$(jq -r .id.id create_response.json)
        echo "otaId=$OTA_ID" >> "$GITHUB_OUTPUT"

    - name: Upload OTA Binary
      shell: bash
      run: |
        echo "Uploading firmware file: ${{ inputs.file }} to OTA package ID: ${{ steps.create_ota.outputs.otaId }}"

        HTTP_RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "${{ inputs.tb_url }}/api/otaPackage/${{ steps.create_ota.outputs.otaId }}" \
          -H "X-Authorization: Bearer ${{ steps.auth.outputs.token }}" \
          -F "file=@${{ inputs.file }}" \
          -d '{"checksumAlgorithm": "SHA-256"}')

        echo "HTTP Response: $HTTP_RESPONSE"

        # Split response and status code
        BODY=$(echo "$HTTP_RESPONSE" | sed '$d')
        STATUS=$(echo "$HTTP_RESPONSE" | tail -n1)

        if [ "$STATUS" -ne 200 ]; then
          echo "Upload failed with status $STATUS"
          echo "Response body:"
          echo "$BODY"
          exit 1
        else
          echo "Upload successful"
        fi
